name: CI
on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install Node.js Dependencies
        run: npm install
      - name: Run Linux Tests
        if: runner.os == 'Linux'
        run: |
          sh src/test/setup-slurm-wrapper.sh
          xvfb-run -a npm test
      - name: Run MacOS Tests
        if: runner.os == 'macOS'
        run: |
          sh src/test/setup-slurm-wrapper.sh
          npm test
      - name: Run Windows Tests
        if: runner.os == 'Windows'
        run: npm test

  coverage:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install Node.js Dependencies
        run: npm install
      - name: Coverage
        run: |
          sh src/test/setup-slurm-wrapper.sh
          xvfb-run -a npm run coverage
      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install Node.js Dependencies
        run: npm install
      - name: Check Format
        run: npm run check-format

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    if: success() && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install Node.js Dependencies
        run: npm install
      - name: Package
        run: npm run package
      - name: Upload Release Artifact
        uses: softprops/action-gh-release@v1
        with:
          files: '*.vsix'
          fail_on_unmatched_files: true
      - name: Deploy
        run: npm run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
